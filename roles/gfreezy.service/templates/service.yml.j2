http:
  middlewares:
    local-only:
      ipWhiteList:
        sourceRange:
          - "172.0.0.1/8"  # Only allow localhost
          - "127.0.0.1/8"  # Only allow localhost
{% if gfreezy_service_hostname %}
{% if gfreezy_service_redirect_hostnames %}
    {{gfreezy_service_name}}-redirect:
      redirectRegex:
          regex: "^https?://({{gfreezy_service_redirect_hostnames|join('|')}})(.*)"
          replacement: "https://{{gfreezy_service_hostname}}$2"
          permanent: true
{% endif %}

  routers:
    {{gfreezy_service_name}}-https-router:
      rule: "(Host(`{{gfreezy_service_hostname}}`){% if gfreezy_service_extra_hostnames or gfreezy_service_redirect_hostnames %} || {% for hostname in gfreezy_service_extra_hostnames + gfreezy_service_redirect_hostnames %}Host(`{{hostname}}`){% if not loop.last %} || {% endif %}{% endfor %}{% endif %}) && !Path(`/metrics`)"
      entryPoints:
        - websecure
{% if gfreezy_service_redirect_hostnames %}
      middlewares:
        - "{{gfreezy_service_name}}-redirect"
{% endif %}
      service: {{gfreezy_service_name}}-service
      tls: {{ {"certResolver": "myresolver"} if not gfreezy_service_use_custom_cert else {} }}

    {{gfreezy_service_name}}-http-router:
      rule: Host(`{{gfreezy_service_hostname}}`) && !Path(`/metrics`)
      entryPoints:
        - web
      service: {{gfreezy_service_name}}-service

    {{gfreezy_service_name}}-metrics-router:
      rule: Host(`{{gfreezy_service_hostname}}`) && Path(`/metrics`)
      entryPoints:
        - web
      middlewares:
        - "local-only"
      service: {{gfreezy_service_name}}-service
{% endif %}

  services:
    {{gfreezy_service_name}}-service:
      loadBalancer:
        servers:
          {% for result in template_gfreezy_service_names -%}
          - url: http://{{result}}:{{gfreezy_service_port}}
          {% endfor %}
